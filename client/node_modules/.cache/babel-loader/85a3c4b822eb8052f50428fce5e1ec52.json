{"ast":null,"code":"export default class TweetService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  async getTweets(username) {\n    const query = username ? `?username=${username}` : '';\n    return this.http.fetch(`/tweets${query}`, {\n      method: 'GET'\n    });\n  } // fetch안에서 실패할 경우 에러를 던지니까 에러를 reject하는 프로미스가 된다. -- promise 참고 \n\n\n  async postTweet(text) {\n    return this.http.fetch(`/tweets`, {\n      method: 'POST',\n      body: JSON.stringify({\n        text,\n        username: 'ellie',\n        name: 'Ellie'\n      })\n    });\n  }\n\n  async deleteTweet(tweetId) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  async updateTweet(tweetId, text) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        text\n      })\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/syl/Desktop/dreamCoding/12-client-template/client/src/service/tweet.js"],"names":["TweetService","constructor","http","getTweets","username","query","fetch","method","postTweet","text","body","JSON","stringify","name","deleteTweet","tweetId","updateTweet"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACD;;AAEc,QAATC,SAAS,CAACC,QAAD,EAAW;AACxB,UAAMC,KAAK,GAAGD,QAAQ,GAAI,aAAYA,QAAS,EAAzB,GAA6B,EAAnD;AACA,WAAO,KAAKF,IAAL,CAAUI,KAAV,CAAiB,UAASD,KAAM,EAAhC,EAAmC;AACxCE,MAAAA,MAAM,EAAE;AADgC,KAAnC,CAAP;AAGD,GAV+B,CAYhC;;;AACe,QAATC,SAAS,CAACC,IAAD,EAAO;AACpB,WAAO,KAAKP,IAAL,CAAUI,KAAV,CAAiB,SAAjB,EAA2B;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCG,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBH,QAAAA,IADmB;AAEnBL,QAAAA,QAAQ,EAAE,OAFS;AAGnBS,QAAAA,IAAI,EAAE;AAHa,OAAf;AAF0B,KAA3B,CAAP;AAQD;;AAEgB,QAAXC,WAAW,CAACC,OAAD,EAAU;AACzB,WAAO,KAAKb,IAAL,CAAUI,KAAV,CAAiB,WAAUS,OAAQ,EAAnC,EAAsC;AAC3CR,MAAAA,MAAM,EAAE;AADmC,KAAtC,CAAP;AAGD;;AAEgB,QAAXS,WAAW,CAACD,OAAD,EAAUN,IAAV,EAAgB;AAC/B,WAAO,KAAKP,IAAL,CAAUI,KAAV,CAAiB,WAAUS,OAAQ,EAAnC,EAAsC;AAC3CR,MAAAA,MAAM,EAAE,KADmC;AAE3CG,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA;AAAF,OAAf;AAFqC,KAAtC,CAAP;AAID;;AAnC+B","sourcesContent":["export default class TweetService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  async getTweets(username) {\n    const query = username ? `?username=${username}` : '';\n    return this.http.fetch(`/tweets${query}`, {\n      method: 'GET',\n    });\n  }\n\n  // fetch안에서 실패할 경우 에러를 던지니까 에러를 reject하는 프로미스가 된다. -- promise 참고 \n  async postTweet(text) {\n    return this.http.fetch(`/tweets`, {\n      method: 'POST',\n      body: JSON.stringify({\n        text,\n        username: 'ellie',\n        name: 'Ellie',\n      }),\n    });\n  }\n\n  async deleteTweet(tweetId) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async updateTweet(tweetId, text) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'PUT',\n      body: JSON.stringify({ text }),\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}